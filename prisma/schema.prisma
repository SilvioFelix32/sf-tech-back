generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  company_id        String            @id @default(uuid()) @map("_id")
  name              String            @unique
  fantasyName       String?
  email             String            @unique
  urlBanner         String?
  users             User[]
  products          Product[]
  productCategories ProductCategory[]
  sales             Sale[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  MASTER
}

model User {
  user_id    String   @id @default(uuid()) @map("_id")
  company    Company? @relation(fields: [company_id], references: [company_id])
  company_id String
  name       String
  lastName   String
  email      String   @unique
  password   String
  role       Role     @default(USER)
  sale       Sale[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductCategory {
  category_id String    @id @default(uuid()) @map("_id")
  company     Company?  @relation(fields: [company_id], references: [company_id])
  company_id  String
  title       String
  description String?
  products    Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  product_id      String           @id @default(uuid()) @map("_id")
  company         Company?         @relation(fields: [company_id], references: [company_id])
  company_id      String
  productCategory ProductCategory? @relation(fields: [category_id], references: [category_id])
  category_id     String?
  sku             String
  title           String
  subtitle        String?
  description     String?
  urlBanner       String?
  price           Float
  discount        Float
  highlighted     Boolean?         @default(false)
  active          Boolean?         @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  sale_id    String   @id @default(uuid()) @map("_id")
  company    Company? @relation(fields: [company_id], references: [company_id])
  company_id String
  user       User     @relation(fields: [user_id], references: [user_id])
  user_id    String
  total      Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
